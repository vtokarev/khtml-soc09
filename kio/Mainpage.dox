/** @mainpage KIO: Network-enabled File Management

<p><b>
Overview |
@ref filedialog "File Selector"
</b></p>

This library implements almost all the file management functions you
will ever need. In fact, the %KDE file manager, Konqueror also uses
this to provide its network-enabled file management.

The easiest way to use this library from a %KDE application is via the
@ref KIO::NetAccess class (for easy synchronous access) or via the
@ref KIO::Job class (for more complex asynchronous jobs).

This library also implements the System Configuration Cache (KSycoca),
and the %KDE file selector widget (see
@ref filedialog "the page on the file selector widget").

@see KMimeType:
  Represents the type of a file.

@see KService:
  A service is a library or application that can deal with a certain
  set of mimetypes.

@see KServiceType:
  A service type is a group of services with similar functionality.  For
  example, KOffice's filters have the service type KOfficeFilter.

@see KServiceTypeTrader:
  Can be used to query for which services implement a given servicetype.
  Has its own language, in order to allow complex queries.

@see KMimeTypeTrader:
  Can be used to query for which services can handle a given mimetype.
  Has its own language, in order to allow complex queries.

@authors
Various: see copyright headers in individual files

@maintainers
[Unknown/None]

@licenses
@lgpl

*/

/** @page filedialog KDE File Dialog Widget

<p><b>
@ref index "Overview" |
File Selector
</b></p>

This library provides the KDE file selector widget, its building blocks
and some other widgets that make use of the file selector.

The file dialog provides different views: there is a vertically scrolling
view based on @ref K3ListView, showing things like filename, file size,
permissions etc. in separate columns. And there is a horizontally scrolling
view based on @ref K3IconView. Additionally, there are some compound views,
like a view using the icon-view for files on the right side and another
view for directories on the left. A view, that shows a preview for the
currently selected file (using @ref KIO::PreviewJob to generate previews)
and any other view to show the files is also available.

All those views share a common baseclass, named @ref KFileView, which
defines the interface for inserting files into a view, removing them,
selecting etc.

The one class encapsulating all those views and adding browsing capabilities
to them is @ref KDirOperator. It allows the user to switch between different
views.

@ref KFileTreeView is a K3ListView based widget that displays files and/or
directories as a tree. It does not implement the KFileView interface,
however, so it can't be used with KDirOperator.

Besides the filebrowsing widgets, there is the @ref KPropertiesDialog class,
implementing a dialog showing the name, permissions, icons, meta
information and all kinds of properties of a file, as well as providing a
means to modify them.

The KPropertiesDialog is extensible with plugin-pages via the
@ref KPropsDlgPlugin class.

The @ref KIconDialog class shows a list of icons installed on the system (as
accessible via @ref KIconLoader) and allows the user to select one.

@ref KOpenWithDlg implements a dialog to choose an application from, that is
to be run, e.g. to let the user choose an application to open a file/url
with.


@see KFileDialog:
  The class providing the file selector dialog. It combines a KDirOperator,
  KUrlBar and several other widgets.

@see KDirOperator:
  The class encapsulating different KFileViews, offering file browsing and
  file selection. Asynchronous, network transparent reading of directories
  is performed via the @ref KIO library.

@see KUrlRequester:
  A widget to be used for asking for a filename/path/URL. It consists of a
  @ref KLineEdit (or @ref KComboBox) and a button. Activating the button
  will open a @ref KFileDialog. Typing in the lineedit is aided with
  filename completion.

@see KUrlRequesterDlg:
  A dialog to ask for a filename/path/URL, using KUrlRequester.

@see KFileView:
  The base class for all views to be used with KDirOperator.

@see KFileIconView:
  The KFileView based on K3IconView.

@see KFileDetailView:
  The KFileView based on K3ListView.

@see KFilePreview:
  The KFileView, combining a widget showing preview for a selected file
  and another KFileView for browsing.

@see KUrlBar:
  A widget offering a number of clickable entries which represent a URL,
  aligned horizontally or vertically. The entries are customizable by the
  user both on a per application basis or for all applications (URLs, their
  icon and the description can be added, removed or edited by the user).
  This is the widget used as "sidebar" in the @ref KFileDialog.

@see KFileMetaInfoWidget:
  A widget that allows viewing and editing of meta data of a file, utilizing
  @ref KFileMetaInfo.

*/

// DOXYGEN_REFERENCES = kdecore kjs kdeui
// DOXYGEN_EXCLUDE = kssl/kssl
// DOXYGEN_SET_PROJECT_NAME = KIO
// vim:ts=4:sw=4:expandtab:filetype=doxygen
