<?xml version="1.0" encoding="UTF-8"?>
<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:nrl="http://semanticdesktop.org/ontology/nrl-20061204#"
    xmlns:nkde="http://nepomuk-kde.semanticdesktop.org/ontology/nkde-0.1#"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
	
    <rdf:Description rdf:about="nkde:Thing">
	<rdf:type rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <rdfs:comment xml:lang="en-US">Thing is the base class of nearly everyThing. It represents all user-accessible resources. It has been introduced to ease certain processes and allow a simpler future extension.</rdfs:comment>
    </rdf:Description>
    
    <rdf:Description rdf:about="nkde:Tag">
	<rdf:type rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <rdfs:comment xml:lang="en-US">A Tag can be assigned to any Thing. This allows simple grouping of resources. Each Tag is identifed by its name which should be unique.</rdfs:comment>
    </rdf:Description>
    
    <rdf:Property rdf:about="nkde:isRelatedTo">
	    <rdfs:domain rdf:resource="nkde:Thing" />
	    <rdfs:range rdf:resource="nkde:Thing" />
	    <rdfs:comment xml:lang="en-US">isRelatedTo represents the basis for all relation between resources of any kind. Whenever another relation type is defined (for example hasAuthor which might relate some text resource to a person resource) it should be based on this relation.</rdfs:comment>
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasIdentifier">
	    <rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
     <rdfs:comment xml:lang="en-US">Each resource has a unique arbitrary URI which can be autogenerated or chosen by some algorithm. The URI of a resource, however, in general has no relation to for example the path or URL of a file or the UID of an email. This is where the hasIdentifier properly comes in: it allows to relate a resource with other (even application-specific) identifiers to have easy access to the resource. Once typical example is the path of a local file (see also hasLocation which is a sub-property of hasIdentifier).</rdfs:comment>
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasTag">
        <rdfs:range rdf:resource="nkde:Tag"/>
        <rdfs:domain rdf:resource="nkde:Thing" />
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasAnnotation">
	<rdfs:subPropertyOf rdf:resource="rdfs:comment" />
        <rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <nrl:maxCardinality>1</nrl:maxCardinality>
        <rdfs:domain rdf:resource="nkde:Thing" />
        <rdfs:comment xml:lang="en-US">EveryThing can be annotated with a simple string comment.</rdfs:comment>
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasTagLabel">
	<rdfs:subPropertyOf rdf:resource="rdfs:label" />
        <rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <nrl:cardinality>1</nrl:cardinality>
        <rdfs:domain rdf:resource="nkde:Tag" />
        <rdfs:comment xml:lang="en-US">A Tag is basicly a string value representing the Tag. This label should be unique.</rdfs:comment>
    </rdf:Property>

    <rdf:Description rdf:about="nkde:EMail">
	<rdf:type rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <rdfs:subClassOf rdf:resource="nkde:Thing" />
    </rdf:Description>
    
    <rdf:Description rdf:about="nkde:File">
	<rdf:type rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <rdfs:subClassOf rdf:resource="nkde:Thing" />
    </rdf:Description>
    
    <rdf:Property rdf:about="nkde:hasLocation">
	<rdfs:subPropertyOf rdf:resource="nkde:hasIdentifier" />
        <rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <nrl:cardinality>1</nrl:cardinality>
        <rdfs:domain rdf:resource="nkde:File" />
        <rdfs:comment xml:lang="en-US">The location of a File is it's URL or path.</rdfs:comment>
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasRating">
	    <rdfs:range rdf:resource="xs:nonNegativeInteger" />
	    <rdfs:domain rdf:resource="nkde:Thing" />
	    <nrl:cardinality>1</nrl:cardinality>
	    <rdfs:comment xml:lang="en-US">Everything can be rated. FIXME: can we define max and min values? Maybe using XML Schema?</rdfs:comment>
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasIcon">
	  <rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal" />
	    <rdfs:domain rdf:resource="nkde:Thing" />
	    <rdfs:comment xml:lang="en-US">Everything can have an associated icon. On XDG aware desktop systems the value will in most cases be an icon name. It is also possible to specify the full path to a pixmap file that is to be used.</rdfs:comment>
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasCreationDate">
	    <rdfs:subPropertyOf rdf:resource="dc:date" />
	    <rdfs:domain rdf:resource="nrl:Graph" />
	    <rdfs:comment xml:lang="en-US">NIO uses named graphs to state metadata about triples. This property refers to the creation date of each triple in one named graph. Dublin core is not used directly to be more flexible in terms of future changes or extensions.</rdfs:comment>
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasCreator">
	    <rdfs:subPropertyOf rdf:resource="dc:creator" />
	    <rdfs:domain rdf:resource="nrl:Graph" />
	    <rdfs:comment xml:lang="en-US">NIO uses named graphs to state metadata about triples. This property refers to the creator, i.e. the user that added this graph, of each triple in one named graph. Dublin core is not used directly to be more flexible in terms of future changes or extensions.</rdfs:comment>
    </rdf:Property>

    <rdf:Property rdf:about="nkde:hasMimetype">
	    <rdfs:domain rdf:resource="nkde:File" />
	    <rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal" />
	    <rdfs:comment xml:lang="en-US">The mimetype of a file, for example image/jpeg or application/pdf.</rdfs:comment>
    </rdf:Property>

    <rdf:Property rdf:about="nkde:hasSize">
	    <rdfs:domain rdf:resource="nkde:File" />
	    <rdfs:range rdf:resource="xs:unsignedLong" />
	    <rdfs:comment xml:lang="en-US">The size of a file in bytes.</rdfs:comment>
    </rdf:Property>

    <rdf:Property rdf:about="nkde:hasFileCreationDate">
	    <rdfs:subPropertyOf rdf:resource="dc:date" />
	    <rdfs:domain rdf:resource="nkde:File" />
	    <rdfs:comment xml:lang="en-US">The creation date of a file.</rdfs:comment>
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasFileModificationDate">
	    <rdfs:subPropertyOf rdf:resource="dc:date" />
	    <rdfs:domain rdf:resource="nkde:File" />
	    <rdfs:comment xml:lang="en-US">The date a file was last modified.</rdfs:comment>
    </rdf:Property>

    <rdf:Property rdf:about="nkde:hasOwner">
	    <rdfs:domain rdf:resource="nkde:File" />
	    <rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal" />
	    <rdfs:comment xml:lang="en-US">The owner of a file, i.e. the name of the user id owning the file.</rdfs:comment>
    </rdf:Property>
    
    <rdf:Property rdf:about="nkde:hasGroup">
	    <rdfs:domain rdf:resource="nkde:File" />
	    <rdfs:range rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal" />
	    <rdfs:comment xml:lang="en-US">The group the file belongs to, i.e. the name of the group id.</rdfs:comment>
    </rdf:Property>

</rdf:RDF>
